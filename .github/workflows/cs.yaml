name: Build and release C#

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the release (e.g. v1.0.0)'
        required: true

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v5.0.0

      - name: Build x64 executable
        run: |
          mkdir output
          dotnet build "Installer/Installer Win.csproj" -c Release -o output
          # If the build produces .bin files, compress them. Otherwise, fall back to any .exe.
          pushd output
          if (Test-Path -Path "*.bin") {
            Compress-Archive -Path *.bin -DestinationPath ..\AffirmationImageGenerator-x64.zip -Force
          } else {
            # include exe as well if present
            Compress-Archive -Path * -DestinationPath ..\AffirmationImageGenerator-x64.zip -Force
          }
          popd

      - name: Upload x64 artifact (zip)
        uses: actions/upload-artifact@v4.6.2
        with:
          name: x64-zip
          path: AffirmationImageGenerator-x64.zip

  build-windows-arm64:
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v5.0.0

      - name: Build ARM64 executable
        run: |
          mkdir output
          dotnet build "Installer/Installer Win.csproj" -c Release -o output
          # Compress .bin files into a zip; if none exist, include produced artifacts
          pushd output
          if (Test-Path -Path "*.bin") {
            Compress-Archive -Path *.bin -DestinationPath ..\AffirmationImageGenerator-aarch64.zip -Force
          } else {
            Compress-Archive -Path * -DestinationPath ..\AffirmationImageGenerator-aarch64.zip -Force
          }
          popd

      - name: Upload ARM64 artifact (zip)
        uses: actions/upload-artifact@v4.6.2
        with:
          name: arm64-zip
          path: AffirmationImageGenerator-aarch64.zip

  release:
    needs: [build-windows-x64, build-windows-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: x64-zip
          path: release_artifacts/x64

      - name: Download ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: arm64-zip
          path: release_artifacts/arm64

      - name: Verify downloaded files
        run: |
          ls -R release_artifacts

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.tag }}
          name: Release ${{ inputs.tag }}
          body: |
            ## Release Notes for ${{ inputs.tag }}

            This release includes the following binaries:
            - Windows x64
            - Windows ARM64
          artifacts: |
            release_artifacts/x64/AffirmationImageGenerator-x64.zip
            release_artifacts/arm64/AffirmationImageGenerator-aarch64.zip
          token: ${{ secrets.GITHUB_TOKEN }}
