name: Build and release C#

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the release (e.g. v1.0.0)'
        required: true

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v5.0.0

      - name: Set cleaned version
        shell: powershell
        run: |
          $cleanedVersion = "${{ inputs.tag }}".Replace("v", "")
          echo "VERSION_CLEANED=$cleanedVersion" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Build and package x64
        run: |
          # Build and package installer
          dotnet publish "Installer/Installer Win.csproj" -c Release -r win-x64 --self-contained true -o output/installer /p:Version=${{ env.VERSION_CLEANED }}
          Compress-Archive -Path output/installer -DestinationPath installer-x64.zip -Force

          # Build and package app
          pushd App
          dotnet build -c Release -r win-x64 /p:Version=${{ env.VERSION_CLEANED }}
          popd
          Copy-Item "App/LilitaOne-Regular.ttf" -Destination "App/bin"
          Compress-Archive -Path App/bin -DestinationPath app-x64.zip -Force

      - name: Upload x64 installer artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: installer-x64-zip
          path: installer-x64.zip

      - name: Upload x64 app artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: app-x64-zip
          path: app-x64.zip

  build-windows-arm64:
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v5.0.0

      - name: Set cleaned version
        shell: powershell
        run: |
          $cleanedVersion = "${{ inputs.tag }}".Replace("v", "")
          echo "VERSION_CLEANED=$cleanedVersion" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Build and package ARM64
        run: |
          # Build and package installer
          dotnet publish "Installer/Installer Win.csproj" -c Release -r win-arm64 --self-contained true -o output/installer /p:Version=${{ env.VERSION_CLEANED }}
          Compress-Archive -Path output/installer -DestinationPath installer-arm64.zip -Force

          # Build and package app
          pushd App
          dotnet build -c Release -r win-arm64 /p:Version=${{ env.VERSION_CLEANED }}
          popd
          Copy-Item "App/LilitaOne-Regular.ttf" -Destination "App/bin/Release/net8.0-windows/win-arm64"
          Compress-Archive -Path App/bin -DestinationPath app-arm64.zip -Force

      - name: Upload ARM64 installer artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: installer-arm64-zip
          path: installer-arm64.zip
      
      - name: Upload ARM64 app artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: app-arm64-zip
          path: app-arm64.zip

  release:
    needs: [build-windows-x64, build-windows-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download installer-x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: installer-x64-zip
          path: release_artifacts/x64-installer

      - name: Download app-x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: app-x64-zip
          path: release_artifacts/x64-app

      - name: Download installer-arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: installer-arm64-zip
          path: release_artifacts/arm64-installer

      - name: Download app-arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: app-arm64-zip
          path: release_artifacts/arm64-app

      - name: Verify downloaded files
        run: |
          ls -R release_artifacts

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ inputs.tag }}
          name: Release ${{ inputs.tag }}
          generateReleaseNotes: true
          body: |
            ## Release Notes for ${{ inputs.tag }}

            This release includes the following binaries:
            - Windows x64 (Installer and App)
            - Windows ARM64 (Installer and App)
          artifacts: |
            release_artifacts/x64-installer/installer-x64.zip
            release_artifacts/x64-app/app-x64.zip
            release_artifacts/arm64-installer/installer-arm64.zip
            release_artifacts/arm64-app/app-arm64.zip
          token: ${{ secrets.GITHUB_TOKEN }}
